version: 2.1
orbs:
  win: circleci/windows@2.2.0
  python: circleci/python@1.5.0 
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@2.0.1
  browser: circleci/browser-tools@1.2.4
jobs:
  build:
    executor: node/default
    steps:
      - node/install:
          node-version: '16.13.1'
      - browser/install-chrome
      - browser/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install         
      - aws-cli/setup
      - eb/setup
      - checkout
      - restore_cache:
          name: Restore Package Cache
          keys:
            - npm-packages-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run: 
          name: Install dependencies
          command: |
            sudo npm install -g npm@8.3.2
      - save_cache:
          name: Save Package Cache
          key: npm-packages-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/project/node_modules/
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            npm run api:install
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run api:build
  # test:
  #   executor: win/default
  #   steps:
      # - checkout
      - run:
          name: Unit Test
          command: |
            npm run test
  # deploy:
  #   executor: node/default
  #   steps:
      - checkout          
      - run:
          name: Deploy App
          command: |
            npm run frontend:deploy
            npm run api:deploy
      - run:
          name: Deploy Environment Variables
          command: |          
            cd ./udagram-api
            setenv POSTGRES_USERNAME=$POSTGRES_USERNAME 
            setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            setenv POSTGRES_DB=$POSTGRES_DB
            setenv PORT=$PORT
            setenv DB_PORT=$DB_PORT
            setenv POSTGRES_HOST=$POSTGRES_HOST
            setenv AWS_REGION=$AWS_DEFAULT_REGION
            setenv AWS_PROFILE=$AWS_PROFILE
            setenv AWS_BUCKET=$AWS_BUCKET
            setenv URL=$URL
            setenv JWT_SECRET=$JWT_SECRET
# workflows:
#   build_and_test:
#     jobs:
#       - build
#       - deploy:    
#           requires:
#             - build
            # - test